@page "/select"

@code {
#if DEBUG
    string endpoint = "https://localhost:44306/Pokemon";
#else
    string endpoint = "https://localhost:44306/Pokemon";
#endif

    enum EnumPokemons
    {
        Nenhum,
        Pikachu = 1,
        Bulbasaur,
        Charmander,
        Squirtle
    }

    EnumPokemons enumValue;

    string[] ListPokemons = new string[]
            {
        "Pikachu",
        "Bulbasaur",
        "Charmander",
        "Squirtle"
            };

    string stringValue { get; set; }
    string Id { get; set; }
    string Name { get; set; }
}

<div class="mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
    <div class="mdl-cell--12-col">
        <h1>Select Enum</h1>
    </div>

    <div class="mdl-cell--12-col">
        <h4>Example @enumValue.ToString() </h4>
        <h6>Below is an example of how to implement the SELECT ENUM component</h6>
    </div>

    <FTTSelectEnums OnItemSelected="@(e => { Console.WriteLine("Selected: " + enumValue.ToString()); })"
                    BorderRight="true"
                    @bind-Value="@enumValue"
                    T="EnumPokemons"
                    Size="4"
                    Required="true"
                    Label="Enum example">
    </FTTSelectEnums>

    <div class="mdl-cell--12-col">
        <h4>In the code</h4>
        <h6>Below is an image of how to implement the component in your system</h6>
        <img src="../img/about/selectEnum.png" />
    </div>

    <div class="mdl-cell--12-col">
        <h4><span style="font-weight:bold;">FTTSelectEnums</span> attributes</h4>
        <h6><span style="font-weight:bold;">OnItemSelected:</span> Allows calling a method when switching items</h6>
        <h6><span style="font-weight:bold;">BorderRight:</span> Adds a border on the right</h6>
        <h6><span style="font-weight:bold;">bind-Value:</span> Binds a value to a variable that can be used in the "OnItemSelected" call</h6>
        <h6><span style="font-weight:bold;">T:</span> Enum that will assemble the DDL (Data Definition Language)</h6>
        <h6><span style="font-weight:bold;">Size:</span> Sets the element size</h6>
        <h6><span style="font-weight:bold;">Required:</span> Boolean attribute that specifies that the field must be filled out before submitting the form</h6>
        <h6><span style="font-weight:bold;">Label:</span> Label text</h6>
        <h6><span style="font-weight:bold;">IsReadOnly:</span> Boolean value that makes the element not mutable (the user can not edit it)</h6>
    </div>

</div>

<div class="mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
    <div class="mdl-cell--12-col">
        <h1>Select String Array</h1>
    </div>

    <div class="mdl-cell--12-col">
        <h4>Example @stringValue</h4>
        <h6>How to use the Select Array element using string object.</h6>
    </div>

    <FTTSelectArray OnItemSelected="@(e => { Console.WriteLine("Selecionou: " + stringValue); })"
                    BorderRight="true"
                    @bind-Value="@stringValue"
                    Data="@ListPokemons"
                    Size="4"
                    Required="true"
                    Label="Sstring array example">
    </FTTSelectArray>

    <div class="mdl-cell--12-col">
        <h4>In the code</h4>
        <h6>Below is an image of how to implement the dialog component in your system</h6>
        <img src="../img/about/selectString.png" />
    </div>

    <div class="mdl-cell--12-col">
        <h4><span style="font-weight:bold;">FTTSelectEnums</span> attributes</h4>
        <h6><span style="font-weight:bold;">OnItemSelected:</span> Allows calling a method when switching items</h6>
        <h6><span style="font-weight:bold;">BorderRight:</span> Adds a border on the right</h6>
        <h6><span style="font-weight:bold;">bind-Value:</span> Binds a value to a variable that can be used in the "OnItemSelected" call</h6>
        <h6><span style="font-weight:bold;">Data:</span> Defines the name of the variable that will assemble the DDL (Data Definition Language)</h6>
        <h6><span style="font-weight:bold;">Size:</span> Sets the element size</h6>
        <h6><span style="font-weight:bold;">Required:</span> Boolean attribute that specifies that the field must be filled out before submitting the form</h6>
        <h6><span style="font-weight:bold;">Label:</span> Label text</h6>
        <h6><span style="font-weight:bold;">IsReadOnly:</span> Boolean value that makes the element not mutable (the user can not edit it)</h6>
    </div>

</div>

<div class="mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
    <div class="mdl-cell--12-col">
        <h1>Select Endpoint</h1>
    </div>

    <div class="mdl-cell--12-col">
        <h4>Example @Name</h4>
        <h6>Below is an example of how to implement the Select Endpoint.</h6>
    </div>

    <FTTSelect OnItemSelected="@(e => { Console.WriteLine("Selecionou: ID " + Id + "NAME " + Name); })"
               BorderRight="true"
               T="Common.PokeAPI.PokemonDTO"
               Size="4"
               DataSourceEndpoint="@endpoint"
               Required="true"
               DataSourceDescField="Name"
               @bind-DataId="@Id"
               @bind-DataDesc="@Name"
               Label="String endpoint example"
               Filter="(x => !string.IsNullOrWhiteSpace(x.Name))">
    </FTTSelect>

    <div class="mdl-cell--12-col">
        <h4>In the code</h4>
        <h6>Below is an image of how to implement the dialog component in your system</h6>
        <img src="../img/about/selectEndpoint.png" />
    </div>

    <div class="mdl-cell--12-col">
        <h4><span style="font-weight:bold;">FTTSelectEnums</span>attributes</h4>
        <h6><span style="font-weight:bold;">OnItemSelected:</span> Allows calling a method when switching items</h6>
        <h6><span style="font-weight:bold;">BorderRight:</span> Adds a border on the right</h6>
        <h6><span style="font-weight:bold;">T:</span> Entity that will assemble the DDL (Data Definition Language)</h6>
        <h6><span style="font-weight:bold;">Size:</span> Sets the element size</h6>
        <h6><span style="font-weight:bold;">DataSourceEndpoint:</span> Endpoint to make a GET request</h6>
        <h6><span style="font-weight:bold;">Required:</span> Boolean attribute that specifies that the field must be filled out before submitting the form</h6>
        <h6><span style="font-weight:bold;">DataSourceDescField:</span> Defines the name of the bariable that will show in the DDL</h6>
        <h6><span style="font-weight:bold;">bind-DataId:</span> Binds the id veriable to the component</h6>
        <h6><span style="font-weight:bold;">bind-DataDesc:</span> Binds the descriptions variable to the component</h6>
        <h6><span style="font-weight:bold;">Label:</span> Label text</h6>
        <h6><span style="font-weight:bold;">Data:</span> Defines the name of the variable that will assemble the DDL (Data Definition Language)</h6>
        <h6><span style="font-weight:bold;">IsReadOnly:</span> Boolean value that makes the element not mutable (the user can not edit it)</h6>
        <h6><span style="font-weight:bold;">TokenProvider:</span> Adds a JWT to the request</h6>
        <h6><span style="font-weight:bold;">Filter:</span> Specifies a filter to return those elements for which the expression is true</h6>
    </div>

</div>